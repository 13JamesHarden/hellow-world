变量中数据类型分为：
  （1）基本数据类型：在内存中存放的是真正的值
      4大类，共计8种
  （2）引用数据类型：在内存中存放的是地址（引用）
      String
      用户自定义类型，如：Student...
  （3）对引用数据类型赋值的方式：
      a.将对象赋给引用名称
        如：s = new Student();
      b.将null值赋给引用名称
        如：s = null
      
空指针异常：
    属于运行错误，java.lang.NULLPointerException
    原因：当引用名称s是null时，因此不能访问某个对象中的属性或方法
    解决办法：在访问某个对象中的属性或方法之前必须保证该引用名称中的存放的是对象的地址（引用）
    
当一个对象中的属性是引用数据类型：


封装：
  面向对象有三大特征：封装、继承、多态
  （1）封装
      a.定义：隐藏类的内部信息，不允许外部程序直接访问，而是通过方法访问进行操作
      b.操作步骤：
      第一步：将属性设置为私有的private，只能在本类中使用
          private int age;
      char sex;
      第二步：编写对应属性的赋值setXxx和取值getXxx方法
      public void setAge(int age){
      第三步：根据情况编写判断语句
        //将局部变量的值赋给成员变量，0---100，否则为18
        if (age >= 0 && age <= 100){
          this.age = age;
        }else{
          this.age = 18;
        }
      }
      public int getAge(){
        return age;//表示返回成员变量age的值
      }
      
  （2）继承
  （3）多态
  


this关键字：
  （1）this表示当前这个对象，也就是说当前谁调用这个方法，则这个对象就是谁
  （2）this关键字可以访问本类中的实例变量
      a.当局部变量和成员变量没有同名时，则编写属性各等价于this.属性名，如：id 等价于 this.id
      b.当局部变量和成员变量同名时，并且访问成员变量则必须使用this.
  （3）this关键字还可以访问本类中的实例方法
      a.方法名称([参数列表]);   等价于  this.方法名称([参数列表]);
  （4）this关键字还可以访问本类中的其他构造方法
      a.this();//访问本类无参构造方法
      b.this([实参列表]);
      c.当使用this访问本类构造方法时，则只能编写在构造法中，并且是第一条语句
      d.构造方法不能出现递归调用
      
      
      





































