循环概念：
    （1）在 Java中做重复事情，并且重复的只编写一次，好处是减少代码的冗余性。
    （2）常用的的循环：for循环、while循环、do while循环
    （3）循环的特点：循环条件、循环操作（循环体）
for循环：
    （1）语法格式：
    for(表达式1；表达式2；表达式3){
       循环体
    }
    在for循环中，表达式1完成变量的初始值，如int i= 1；
    在for循环中，表达式2完成循环条件判断，如果条件满足为true，则执行循环体，否则执行循环外面的语句，如：i<5
    在for循环中，循环体主要做重复的事情，并且重复的事情在循环体中只编写一次（循环体中可以编写Java中的任何语句）
    在for循环中，表达式3完成变量值的更改，如：i++
    例如：输出5遍HelloWorld，使用for循环完成
    for(int i = 1;i <= 5;i++){ //i = 5
      System.out.println("HelloWorld");
    }
    输出结果：
    HelloWorld！
    HelloWorld！
    HelloWorld！
    HelloWorld！
    HelloWorld！
双重循环：在一个完整的循环中又包含另一个完整循环。
    for(;;){  //称为外层循环
      for(;;){ //称为内层循环
      
      }
    }
    结论：当外层循环执行一次，则内层循环执行一遍
for循环的注意事项：
    （1）在for循环中，三个表达式都可以省略，但是分号必须编写，则出现无限循环
         解决办法：按ctrl+c强行终止程序运行
         for(;;){
            System.out.println("OK");
         }
    （2）在for循环中，省略表达式1，则出现编译错误
          解决办法：将表达式1编写在for循环上面
          int i = 1;
          for(;i <= 5;i++){
              System.out.println(i);
          }
     （3）在for循环中，省略表达式2，则出现无限循环
     （4）在for循环中，省略表达式3，则出现无限循环
          解决办法：将表达式3编写在循环体中最后一条语句
          for(int i = 1;i <= 5;){
              System.out.println(i);
              i++;
          }
     （5）当for循环中的表达式1变量的值在循环外使用，则出现编译错误
          解决办法：将表达式1中声明的变量，编写在for循环外面进行声明
          int i；
          for(i = 1;i <= 5;i++){
              System.out.println(i);
          }
          System.out.println(i);
while循环：
      （1）语法格式：
        while（循环条件）{
            循环体
        }
      （2）执行流程：首先判断条件，当条件为true时，则执行循环体，然后再判断条件....，一直到循环条件为false时，则循环结束
      
        
        
        
do while循环：
      （1）特点：先执行，然后再判断
      （2）语法格式：
        do{
           循环体
        }while(循环条件);
      （3）执行流程：先执行循环体，然后再判断条件，当条件为true时，则继续执行循环体，然后再判断条件...一直到循环条件为false时则循环结束

三种循环的异同点：
      （1）语法格式不同；
      （2）执行顺序不同：
          for循环和while循环：先判断当条件为true时，然后再执行
          do while循环：先执行循环体，然后再判断条件
      （3）使用情况不同：
          当循环次数固定时，建议使用for循环
          当循环次数不固定时，建议使用while循环、do while循环
          a.先判断，再执行，则使用while循环
          b.先执行，然后再做判断，则使用do while循环
          当循环条件第一次为false时，则
          a.for循环执行0次循环体
          b.while循环执行0次循环体
          c.do while循环执行1次循环体
          得出结论：
          a.for循环：0次-----N次
          b.while循环：0次-----N次
          c.do while循环：1次-----N次

在循环中使用break语句：
    break表示中断，当在循环中遇到break则结束当前整个循环，执行循环外面的语句
在循环中使用continue语句：
    continue表示继续，当遇到continue语句时，则结束当次循环继续执行下次循环
break与continue区别：
    （1）适用场合不同
        break：可以在switch case中使用，也可以在循环中使用
        continue：只能在循环中使用
    （2）作用不同
        break表示中断，当在switch case中或循环中遇到break则结束当前整个switch case或循环，执行循环外面的语句
        continue表示继续，当在循环遇到continue语句时，则结束当次（本次）循环继续执行下一次循环  
          
          
          
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
    
    
    
    
    
    
