参数传递：
  （1）基本数据类型作为参数传递：
       传递的是真正的值，在一个方法中改变变量的值，对另一个方法中的变量没有任何影响，各自变量是独立的
  （2）引用数据类型作为参数传递：
       传递的是地址，也就是说多个引用名称共用一个对象

static关键字（静态）：
  （1）可以修饰属性
      （a）称为静态属性也叫类的变量
      （b）在方法区（共享区）中存储，并且所有对象都可以访问
      （c）与类同生死，也就是说类在static修饰的属性就存在
      （d）可以使用类名.属性名称，也可以使用引用名称.属性名称
          注意：当引用名称的值为null时，也可以访问静态属性，不会出现空指针异常
      （e）类优先于对象，也就是说类的生命周期比较长
  （2）可以修饰方法
      （a）称为静态方法也叫类的方法
      （b）与类同生死，也就是说类在static修饰的方法就存在
      （c）可以使用类名.方法名称([参数列表])，也可以使用引用名称.方法名称([参数列表])
          注意：当引用名称的值为null时，也可以访问静态方法，不会出现空指针异常
      （d）类优先于对象，
      （e）静态方法只能访问静态属性、静态方法
      （f）当方法体中只能访问静态属性、静态方法时，可以编写为静态方法
  （3）可以修饰代码块
      （a）主要完成对静态属性赋值
      （b）静态代码块在类第一次被载入时则执行

继承：编写狗类，属性：名字、年龄、品种、颜色，方法：显示信息
编写猫类，属性：名字、颜色、性别、年龄，方法：显示信息
编写测试类，创建猫和狗的对象，并分别显示信息

分析得到：
		如果多个类中有相同的属性和方法，能单独编写一个类
解决办法：
		1.将多个类中相同的属性和方法写在单独一个类中，该类称为父类
		2.在子类继承父类，然后在子类中的编写独有的属性和方法

		动物类：
				属性：名字、年龄、颜色
				方法：显示信息
		狗类 继承 动物类
				独有属性：品种
		猫类 继承 动物类
				独有属性：性别


继承好处：减少代码的冗余性（重复性）

编写继承代码的步骤：
    第一步：编写父类
          [修饰符] class 类名{
          //属性和方法
          
          }
    第二步：编写子类
          [修饰符] class 子类类名 extends（继承） 父类类名{
              //编写独有属性和方法
          }
          注意：1.当一个类没有指名继承具体哪个父类，则默认继承object类；
               2.Object类是所有类的父类（超类）
          class Dog{

          }
          //等价于
          class Dog extends Object{
          }
   
继承中的注意事项：
    （1）子类继承父类，但不能继承父类的构造方法；
    （2）父类也叫作超类（基类），子类也叫派生类；
    （3）继承满足的条件：
        is a 如：猫 是 动物
    （4）继承具有两大特性：
        a.一个类只能继承一个直接的父类，也就是类具有单根性；
        b.类具有传递性
        class A{
           //编写2个属性，2个方法
        }
        class B extends A{
            //独有属性1个，方法3个
        }
        class C extends A{
            //独有属性1个
        }
        class D extends B{
        
        }
        

重写：
    （1）重写（override）也叫覆盖
         a.子类中重写父类的方法，必须与父类的方法名称一致
         b.参数列表一致
         c.返回类型一致或父类方法返回类型的子类类型
         d.修饰符不能缩小范围
    （2）子类不能重写：
         a.构造方法不能重写
         b.属性不能重写
         c.静态方法不能重写
         d.私有方法不能重写























